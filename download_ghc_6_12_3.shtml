---
version: 6.12.3
date: 12 June 2010
---

<h1><a name="6.12.3">Version 6.12.3 (released 12 June 2010)</a></h1>

<div style="text-align: center">
<div style="background: #E0E0E0; width: 90%; text-align: left;
    padding-left: 10px; padding-right: 10px;
	margin-left: auto; margin-right: auto; border: 1px black solid">
   <p style="font-size: 130%; color: red">Stop!</p>
   <p>
     For most users, we recommend installing the
     <a href="http://hackage.haskell.org/platform/">Haskell
     Platform</a> instead of GHC. The current Haskell Platform release
     includes a recent GHC release as well as some other tools (such as
     cabal), and a larger set of libraries that are known to work
     together. This standalone GHC 6.12.3 release is aimed primarily at
     package maintainers and early adopters.
   </p>
</div>
<div style="background: #E0E0E0; width: 90%; text-align: left;
    padding-left: 10px; padding-right: 10px;
	margin-left: auto; margin-right: auto; border: 1px black solid">
   <p style="font-size: 130%; color: red">Bundled packages and cabal-install</p>

   <p>If you have installed a standalone GHC before and are upgrading
   to 6.12, note that this release of GHC comes with fewer packages
   than before.  The extra packages have to be installed separately.</p>

   <p>GHC 6.12.3 only works with <a href="http://hackage.haskell.org/trac/hackage/wiki/CabalInstall">Cabal-install</a>
     version 0.8 or later.  Please upgrade if you have an older
     version of cabal-install.</p>
</div>
</div>

<!--
<div style="text-align: center">
<div style="background: #d0d0f0; width: 350px; text-align: left; padding: 10px;
	font-size: 120%; margin-left: auto; margin-right: auto; border: 1px dashed">
   While GHC is downloading, why not take a few minutes to fill in the 
   <a href="survey/start.cgi">GHC Survey</a>!
</div>
</div>
-->

<h2>Contents</h2>

    <ul>
	<li><a href="docs/6.12.3/html/users_guide/release-6-12-3.html">Release Notes (vs. 6.12.2)</a></li>
	<li><a
	    href="docs/6.12.3/html/">Documentation</a></li>
        <li><a href="#distros">Distribution packages</a></li>
        <li><a href="#binaries">Binaries</a></li>
        <li><a href="#sources">Sources</a></li>
    </ul>

<h2><a name="distros">Distribution packages</a></h2>

<div class="body">
<p>
  GHC is packaged for a number of operating systems and
  distributions. While they may lag behind the latest GHC
  release, advantages such as dependency checking and ease of
  uninstallation mean we recommend using them anyway, unless
  you have a particular need for new features or bug fixes.
</p>
</div>

<ul>
  <li>
    <a href="distribution_packages.html">Distribution packages</a>
  </li>
</ul>

<h2><a name="binaries">Binary Packages</a></h2>

<div class="body">

<p>The OS-specific packages (eg. RPMs on Linux) are generally a better
bet than the vanilla <tt>.tar.bz2</tt> binary bundles, because they
will check for dependencies and allow the package to be uninstalled at
a later date.</p>

<p>However, if you don't have permission to install binaries on your
system, or you want to install somewhere other than the default place
(<tt>/usr</tt> or <tt>/usr/local</tt> on a Unix system), then you'll
need to use a <tt>.tar.bz2</tt> binary bundle.</p>

<div style="border:1px solid; background:#ffffc6; padding: 10px">

<p>Supported platforms:</p>

<ul>
<li><a href="#x86linux">Linux (x86)</a></li>
<li><a href="#x86_64linux">Linux (x86_64)</a></li>
<li><a href="#windows">Windows 2000/XP/Vista (x86) (standalone)</a></li>
<li><a href="#macosxintel">MacOS X (Intel)</a></li>
<li><a href="#freebsd">FreeBSD (x86)</a></li>
<li><a href="#freebsd_x86_64">FreeBSD (x86_64)</a></li>
</ul>

<p>Community supported platforms:</p>

<ul>
<!--
<li><a href="#rhel">RHEL 4 and 5, i386 and x86_64</a></li>
<li><a href="#hppalinux">Linux (HPPA)</a></li>
<li><a href="#powerpclinux">Linux (PowerPC & PowerPC 64)</a></li>
<li><a href="#sparclinux">Linux (Sparc)</a></li>
<li><a href="#sparcsolaris">Solaris (sparc)</a></li>
<li><a href="#x86solaris">Solaris (x86)</a></li>
-->
<li><a href="#x86opensolaris">OpenSolaris (x86)</a></li>
<!--
<li><a href="#visualhaskell">Windows 95/98/ME/2000/XP (x86) (Visual Studio version)</a></li>
<li><a href="#openbsd">OpenBSD (x86)</a></li>
<li><a href="#macosxppc">MacOS X (PowerPC)</a></li>
<li><a href="#powerpcaix">AIX (PowerPC)</a></li>
-->
</ul>

</div>

<h2>Supported platforms</h2>

<h3><a name="x86linux"></a>Linux (x86)</h3>

<ul>
  <li>
    <p>
    Generic i386 Linux. This is a complete build, including
    interactive system, profiling libraries and documentation.
    </p>
    <ul>
      <li><a href="$downloads_url$/ghc-6.12.3-i386-unknown-linux-n.tar.bz2">ghc-6.12.3-i386-unknown-linux-n.tar.bz2</a> (106 MB)</li>
    </ul>
  </li>
  <li>
    Generic i386 Linux. You need to have a file /lib/libtinfo.so.5
    to use this bindist. This is a complete build, including
    interactive system, profiling libraries and documentation.
    <ul>
      <li><a href="$downloads_url$/ghc-6.12.3-i386-unknown-linux-t.tar.bz2">ghc-6.12.3-i386-unknown-linux-t.tar.bz2</a> (106 MB)</li>
    </ul>
  </li>
</ul>

<p>
    NOTE: If you have too old a version of libc, then you will get an
    error like "floating point exception" from the binaries in these
    bindists. You will need to either upgrade your libc (we're not sure
    what the minimum version required is, but 2.7 is known to work),
    or use a binary package built for your distribution instead.
</p>

<hr />
<h3><a name="x86_64linux"></a>Linux (x86_64)</h3>

<ul>
  <li>
    Generic amd64 Linux. This is a complete build, including
    interactive system, profiling libraries and documentation.
    <ul>
      <li><a href="$downloads_url$/ghc-6.12.3-x86_64-unknown-linux-n.tar.bz2">ghc-6.12.3-x86_64-unknown-linux-n.tar.bz2</a> (106 MB)</li>
    </ul>
  </li>
  <li>
    Generic amd64 Linux. You need to have a file /lib/libtinfo.so.5
    to use this bindist. This is a complete build, including
    interactive system, profiling libraries and documentation.
    <ul>
      <li><a href="$downloads_url$/ghc-6.12.3-x86_64-unknown-linux-t.tar.bz2">ghc-6.12.3-x86_64-unknown-linux-t.tar.bz2</a> (106 MB)</li>
    </ul>
  </li>
</ul>

<p>
    NOTE: If you have too old a version of libc, then you will get an
    error like "floating point exception" from the binaries in these
    bindists. You will need to either upgrade your libc (we're not sure
    what the minimum version required is, but 2.7 is known to work),
    or use a binary package built for your distribution instead.
</p>

<hr />
<h3><a name="windows"></a>Windows (x86) (standalone)</h3>

<ul>
  <li>
    <a href="$downloads_url$/ghc-6.12.3-i386-windows.exe">ghc-6.12.3-i386-windows.exe</a> (65 MB); a Windows Installer for GHC 6.12.3.
  </li>
</ul>

<p>
    This is a complete build, and should work for Microsoft Windows 2000,
    XP and Vista. It also includes support for compiling C++ files.
</p>

<p>
    This installer will not overwrite previous installed versions of
    GHC, with the exception that the default handler for <kbd>.lhs</kbd>
    and <kbd>.hs</kbd> files will point to the most recently installed
    version.
</p>

<hr />
<h3><a name="macosxintel"></a>MacOS X (Intel)</h3>

<ul>
    <li><a href="$downloads_url$/GHC-6.12.3-i386.pkg">GHC-6.12.3-i386.pkg</a> (117 MB)</li>
</ul>

<p>
    This is an installer for Mac OS X 10.5 (Leopard).
    The package requires Xcode 3.1 (in particular, the "Unix Development
    Support") to be already installed.
    You can find Xcode 3.1 at
    <a href="http://developer.apple.com/">http://developer.apple.com/</a>
    (or you may have a new enough version on your OS X installation DVD).
</p>

<!--
<ul>
    <li><a href="$downloads_url$/maeder/ghc-6.10.4-i386-apple-darwin.tar.bz2">ghc-6.10.4-i386-apple-darwin.tar.bz2</a>
    </li>
</ul>

<p>
    This is a binary distribution for Mac OS X 10.5 (Leopard),
    prepared by <a href="mailto:Christian.Maeder@dfki.de">Christian Maeder</a>.
    It needs libiconv.2.dylib and libncurses.5.4.dylib under /usr/lib/.
</p>

<ul>
    <li><a href="$downloads_url$/scsibug/ghc-6.8.1-i386-apple-darwin.tar.bz2">ghc-6.8.1-i386-apple-darwin.tar.bz2</a>
    </li>
</ul>

<p>
    This is a binary distribution or Mac OS X 10.5 (Leopard), prepared by
    <a href="mailto:scsibug@imap.cc">Greg Heartsfield</a>.
    It requires the readline library and GMP framework to be installed.
</p>
-->

<!--
<ul>
    <li><a href="$downloads_url$/maeder/ghc-6.8.3-i386-apple-darwin.tar.bz2">ghc-6.8.3-i386-apple-darwin.tar.bz2</a></li>
</ul>

<p>
    This is a binary distribution for Mac OS X 10.4 (Tiger),
    prepared by <a href="mailto:Christian.Maeder@dfki.de">Christian Maeder</a>.
    You will also need a
    <a href="dist/mac_frameworks/GMP-framework.zip">GMP framework</a>
    and a
    <a href="dist/mac_frameworks/GNUreadline-framework.zip">readline framework</a>.
    For instructions see <a href="dist/mac_frameworks/mac_e.htm">here</a>.
</p>
-->

<!--
<ul>
    <li><a href="$downloads_url$/maeder/ghc-6.8.1-i386-apple-darwin-tiger-optlibs.tar.bz2">ghc-6.8.1-i386-apple-darwin-tiger-optlibs.tar.bz2</a></li>
</ul>

<p>
    This is a binary distribution for Mac OS X 10.4 (Tiger),
    prepared by <a href="mailto:Christian.Maeder@dfki.de">Christian Maeder</a>.
    You will also need gmp3 and readline5 installed under
    /opt/local/. You can set DYLD_LIBRARY_PATH if you have them installed
    elsewhere.
</p>
-->

<hr />
<h3><a name="freebsd"></a>FreeBSD (x86)</h3>

<p>
    <a href="mailto:pgj@FreeBSD.org">Gabor PALI</a>
    has provided binary distribution tarballs for FreeBSD 7 and 8.
    These are complete builds, including interactive system, profiling
    libraries and documentation.
</p>

<ul>
    <li><a href="$downloads_url$/ghc-6.12.3-i386-freebsd-8.tar.bz2">ghc-6.12.3-i386-freebsd-8.tar.bz2</a> (105 MB)</li>
    <li><a href="$downloads_url$/ghc-6.12.3-i386-freebsd-7.tar.bz2">ghc-6.12.3-i386-freebsd-7.tar.bz2</a> (104 MB)</li>
</ul>

<p>
Note: These are not the same as the lang/ghc port.  The packages require
ports math/gmp, converters/libiconv, devel/gmake, lang/perl5.10,
devel/autoconf262 to be already installed.  For installation, set your
prefix by "./configure --prefix=${PREFIX}" and install the binaries by
"gmake install".  For running the testsuite you will need the
lang/python26 port as well.
</p>

<p>
If you have a 4.x version of GMP (installed from math/libgmp), then
you will get an error like "libgmp.so.10 not found" from the binaries
in these bindists. Upgrading your GMP port to 5.x by using the
math/gmp port will solve this problem.
</p>

<hr />
<h3><a name="freebsd_x86_64"></a>FreeBSD (x86_64)</h3>

<p>
    <a href="mailto:pgj@FreeBSD.org">Gabor PALI</a>
    has provided binary distribution tarballs for FreeBSD 7 and 8.
    These are complete builds, including interactive system, profiling
    libraries and documentation.
</p>
<ul>
    <li><a href="$downloads_url$/ghc-6.12.3-amd64-freebsd-8.tar.bz2">ghc-6.12.3-amd64-freebsd-8.tar.bz2</a> (105 MB)</li>
    <li><a href="$downloads_url$/ghc-6.12.3-amd64-freebsd-7.tar.bz2">ghc-6.12.3-amd64-freebsd-7.tar.bz2</a> (104 MB)</li>
</ul>

<p>
Note: These are not the same as the lang/ghc port.  The packages require
ports math/gmp, converters/libiconv, devel/gmake, lang/perl5.10,
devel/autoconf262 to be already installed.  For installation, set your
prefix by "./configure --prefix=${PREFIX}" and install the binaries by
"gmake install".  For running the testsuite you will need the
lang/python26 port as well.
</p>

<p>
If you have a 4.x version of GMP (installed from math/libgmp), then
you will get an error like "libgmp.so.10 not found" from the binaries
in these bindists. Upgrading your GMP port to 5.x by using the
math/gmp port will solve this problem.
</p>

<!--
<h2>Community supported platforms</h2>

<p>
    These platforms are supported by community members.
</p>

<hr />
<h3><a name="sparcsolaris"></a>Sparc/Solaris</h3>

<ul>
  <li><a
    href="$downloads_url$/benl/ghc-6.12.1-sparc-sun-solaris2-fixed.tar.bz2">ghc-6.12.1-sparc-sun-solaris2-fixed.tar.bz2</a></li>
</ul>

<p>
    This is a full binary distribution for Solaris, prepared by
    <a href="mailto:Ben.Lippmeier@anu.edu.au">Ben Lippmeier</a>.
</p>

<p>
    Please use <kbd>gtar</kbd> rather than <kbd>tar</kbd> to unpack
    the tarball, as <kbd>tar</kbd> may have problems with filenames
    longer than 100 characters.
</p>

<p>
    There may be problems with gcc-3.4.x; see
    <a href="http://hackage.haskell.org/trac/ghc/ticket/951">#951</a>
    for details.
</p>

<p>
    There may be problems with gcc &gt;= 4.3.x; see
    <a href="http://hackage.haskell.org/trac/ghc/wiki/Building/Solaris">this page</a>
    for details.
</p>

<hr />
<h3><a name="x86solaris"></a>x86/Solaris</h3>

<p>

<ul>
  <li><a
    href="$downloads_url$/maeder/ghc-6.10.4-i386-unknown-solaris2.tar.bz2">ghc-6.10.4-i386-unknown-solaris2.tar.bz2</a></li>
</ul>

<p>
    This is a binary distribution for Solaris,
    prepared by <a href="mailto:Christian.Maeder@dfki.de">Christian Maeder</a>.
    You will also need (amongst others) libcurses.so.1,
    which may mean setting LD_LIBRARY_PATH.
</p>

<p>
    Please use <kbd>gtar</kbd> rather than <kbd>tar</kbd> to unpack
    the tarball, as <kbd>tar</kbd> may have problems with filenames
    longer than 100 characters.
</p>
-->

<!--
<p>If just want the files, you have the choice of:</p>
<ul>
<li>a .zip bundle: <a href="$downloads_url$/ghc-6-8-3.zip">ghc-6-8-3.zip</a>(~72 MB)</li>
<li>a tarball: <a href="$downloads_url$/ghc-6.8.3-i386-unknown-mingw32.tar.bz2">ghc-6.8.3-i386-unknown-mingw32.tar.bz2</a> (~54 MB)</li>
<li> a 7-zip bundle <a href="$downloads_url$/ghc-6-8-3.7z">ghc-6-8-3.7z</a> (~39 MB)</li>
</ul>
-->

<hr />
<h3><a name="x86opensolaris"></a>x86/OpenSolaris</h3>

<p>

<ul>
  <li><a href="$downloads_url$/lee/OPTSFWghc-6.12.3.i386.pkg.gz">OPTSFWghc-6.12.3.i386.pkg.gz</a></li>
</ul>

<p>
    This is a binary distribution for OpenSolaris snv_134,
    prepared by <a href="mailto:mlexan@gmail.com">Michael Lee</a>.
    There is also a
    <a href="$downloads_url$/lee/OPTSFWcabal-install-0.8.2.i386.pkg.gz">cabal install</a>
    package.
</p>

<!--
<hr />
<h3><a name="visualhaskell"></a>Windows (x86) (Visual Studio version)</h3>

<p><a href="http://www.haskell.org/visualhaskell">Visual Haskell</a>
is a Visual Studio extension for Haskell, which comes with a complete
GHC installation.  Note: Visual Haskell currently does <it>not</it>
work under Windows Vista.
-->

<!--
<hr />
<h3><a name="openbsd"></a>OpenBSD x86<!-, x86_64 (aka amd64), sparc-></h3>

<p>There is a binary distribution with profiling libs, no docs:</p>

<ul>
<li><a
href="$downloads_url$/ghc-6.4.2-i386-unknown-openbsd.tar.bz2">ghc-6.4.2-i386-unknown-openbsd.tar.bz2</a>
	(21MB)</li>
      </ul>

<p>OpenBSD support is thanks to <a
href="mailto:dons@cse.unsw.edu.au">Don Stewart</a></p>.
-->

<!--
<hr />
<h3><a name="macosxppc"></a>MacOS X (PowerPC)</h3>

<p>
    NOTE: In order to use GHC on MacOS X PowerPC, you must have Xcode 3.1
    installed.
</p>

<ul>
    <li><a href="$downloads_url$/maeder/ghc-6.10.4-powerpc-apple-darwin.tar.bz2">ghc-6.10.4-powerpc-apple-darwin.tar.bz2</a>
    </li>
</ul>

<p>
    This is a binary distribution for Mac OS X 10.5 (Leopard) on
    PowerPC G5 machines,
    prepared by <a href="mailto:Christian.Maeder@dfki.de">Christian Maeder</a>.
    It needs libiconv.2.dylib and libncurses.5.4.dylib under /usr/lib/.
</p>
-->

<!--
<ul>
    <li><a href="$downloads_url$/witten/ghc-6.10.1-powerpc-apple-darwin.tar.bz2">ghc-6.10.1-powerpc-apple-darwin.tar.bz2</a>
    </li>
</ul>

<p>
    This is a binary distribution for Mac OS X 10.5 (Leopard),
    prepared by <a href="mailto:mfwitten@MIT.EDU">Michael Witten</a>.
</p>
-->

<!--
<ul>
    <li><a href="$downloads_url$/scsibug/ghc-6.8.1-powerpc-apple-darwin.tar.bz2">ghc-6.8.1-powerpc-apple-darwin.tar.bz2</a>
    </li>
</ul>

<p>
    This is a binary distribution prepared by
    <a href="mailto:scsibug@imap.cc">Greg Heartsfield</a>.
    It requires readline and GMP libraries to be installed.
</p>
-->

<!--
<hr />
<h3><a name="powerpcaix"></a>AIX 5.1L (PowerPC)</h3>

<ul>
  <li><a href="$downloads_url$/tang/ghc-6.8.3-powerpc-ibm-aix.tar.bz2">ghc-6.8.3-powerpc-ibm-aix.tar.bz2</a></li>
</ul>

<p>
    This is an unregisterised build, with no GHCi support.
    It was provided by
    <a href="mailto:audreyt@audreyt.org">Audrey Tang</a>.
</p>
-->

<!--
<hr />
<h3>mips64/Irix</h3>

<ul>
  <li><a
  href="$downloads_url$/ghc-6.4.2-mips64-sgi-irix.tar.bz2">ghc-6.4.2-mips64-sgi-irix.tar.bz2</a></li>
</ul>

<p>This is an unregisterised build, with profiling libs, but no
documentation or GHCi support.  

The mips64 port requires an external libgmp. This should come
installed with the "freeware" packages for Irix.  You also need to set
the <tt>LD_LIBRARY_PATH</tt> variable as follows:

<pre>
   export LD_LIBRARY_PATH=/usr/freeware/lib64:$LD_LIBRARY_PATH
</pre>

The mips64 port is contributed by <a
href="mailto:dons@cse.unsw.edu.au">Don Stewart</a>.
-->

<!--
<hr />
<h3>ia64/Linux</h3>

<ul>
  <li><a
  href="$downloads_url$/ghc-6.4.2-ia64-unknown-linux.tar.bz2">ghc-6.4.2-ia64-unknown-linux.tar.bz2</a></li>
</ul>

<p>This is a full build, with profiling libs and GHCi, but no docs.  The
ia64 port requires an external <tt>libgmp</tt>, installed in some sensible
place.</p>

<p>The ia64 port is thanks to Matt Chapman and <a
href="mailto:dons@cse.unsw.edu.au">Don Stewart</a>.</p>
-->

<h2><a name="sources">Source Distribution</a></h2>

<div class="body">

<ul>
  <li>
    <a href="$downloads_url$/ghc-6.12.3-src.tar.bz2">ghc-6.12.3-src.tar.bz2</a>
    (26 MB). This provides the compiler and a minimal set of libraries.
    For more information on building, see the
    <a href="http://hackage.haskell.org/trac/ghc/wiki/Building">building guide</a>.
  </li>
  <li>
    <a
    href="$downloads_url$/testsuite-6.12.3.tar.bz2">testsuite-6.12.3.tar.bz2</a>
    (2.5 MB). If you unpack this tarball on top of the above then you
    will be able to run the testsuite.
  </li>
</ul>

<p>The source distribution needs an installed GHC (version 6.8 at
least).  If your platform isn't currently supported with a binary
distribution, then you'll need to consult the section on <a
href="http://hackage.haskell.org/trac/ghc/wiki/Building/Porting">Porting GHC</a>
in the Building Guide.</p>

<p>If you have libraries installed somewhere non-standard then you will
need to put something like this in <kbd>mk/build.mk</kbd> before
building:</p>
<pre>
EXTRA_CABAL_CONFIGURE_FLAGS = --extra-include-dirs=/usr/local/include \
                              --extra-lib-dirs=/usr/local/lib
</pre>
</div>

    </div>
